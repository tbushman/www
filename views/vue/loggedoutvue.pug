script(type="text/javascript").
	Vue.prototype.$ = $;
	Vue.prototype.window = window;
	Vue.prototype.moment = moment;
	new Vue({
		el: '#vue',
		data: function data(){
			return {
				checked: false,
				user: this.parseObj(!{JSON.stringify(user)}),
				action: '/login',
				data: this.parseObj(!{JSON.stringify(data)}),
				doc: this.parseObj(!{JSON.stringify(doc)}),
				sliderIndex: 0,
				sliderInterval: null,
				isArticleVisible: false,
				article: '',
				timeout: false,
				articleTimeout: false,
				loading: false
			}
		},
		watch: {
		},
		mounted: function(){
			var self = this;
			
			if (self.data && self.data !== '') {
				if (!self.doc || self.doc === '') {
					self.doc = self.data[0];
				}
				self.article = self.doc.category
				var length = self.doc.media.length;
				if (window.location.href.split('/')[window.location.href.split('/').length - 1] === self.article) {
					if (self.article === 'donate') {
						var db = document.createElement('script');
						db.type = 'text/javascript';
						db.defer = true;
						db.src = 'https://donorbox.org/install-popup-button.js';
						var s = document.getElementsByTagName('script')[0];
						s.parentNode.insertBefore(db, s);
					}
					self.handleOpenArticle(self.article)
				}
				self.sliderInterval = setInterval(function(){
					if (self.sliderIndex < (length - 1)){
						self.sliderIndex++;
					} else {
						self.sliderIndex = 0;
					}
				}, 5000)

			}

		},
		methods: {
			parseObj(obj) {
				if (!obj) return '';
				return obj;
			},
			checkUser(e) {
				var self = this;
				console.log(e)
				var user = e.target.value;
				$.post('/auth/check/'+user)
				.then(function(result) {
					console.log(result)
					if (!result || result === '') {
						self.action = '/register'
					} else {
						self.action = '/login'
					}
					self.checked = true;
				})
				.catch(function(err){
					if (err) {
						self.action = '/register'
						self.checked = true
					}
				})
			},
			handleOpenArticle(article) {
				var self = this;
				var isArticleVisible = this.isArticleVisible
				this.isArticleVisible = !isArticleVisible;
				this.article = article;
						
				setTimeout(() => {
					var timeout = self.timeout;
					self.timeout = !timeout;
				}, 325)

				setTimeout(() => {
					var articleTimeout = self.articleTimeout;
					self.articleTimeout = !articleTimeout
				}, 350)

			},

			handleCloseArticle() {
				var self = this;
				var articleTimeout = self.articleTimeout;
				self.articleTimeout = !articleTimeout

				setTimeout(() => {
					var timeout = self.timeout;
					self.timeout = !timeout;
				}, 325)

				setTimeout(() => {
					var isArticleVisible = this.isArticleVisible
					this.isArticleVisible = !isArticleVisible;
					this.article = '';
				}, 350)
				
				window.location.href = '/'
			},

			handleClickOutside(event) {
				//- if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {
					if (this.isArticleVisible) {
						this.handleCloseArticle();
					}
				//- }
			}

		}
	})
